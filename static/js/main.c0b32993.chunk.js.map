{"version":3,"sources":["commands/basic.js","commands/files.js","lib/fs.js","commands/index.js","components/terminal.jsx","App.js","index.js"],"names":["arr","task","pwdv","s","f","count","o","file","this","path","fs","level","root","contents","_","find","dir","dr","includes","d","push","commands","context","b","help","echo","text","mkdir","arg1","x","length","ls","z","replace","split","basic","getPath","cd","arg","changeDir","intro","prompt","greetings","onBlur","Terminal","$el","$","el","terminal","style","width","ref","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0b32993.chunk.js","sourcesContent":["\r\nvar id = 1;\r\nvar arr = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];// Keeps track of different commands(i.e., if they are completed or not)\r\n                                // 0 -> not completed\r\n                                // 1 -> completed \r\n                                // added 1 more position\r\nvar arr2 = ['echo','pwd','ls','cd','cd ..','cd ~','cat','touch','cp','rm','mkdir','clear','uname','date','ifconfig','tty','history'];\r\n//all the newly added commands must be updated in both the above arrays\r\nvar task = ['[[b;#ff3300;]Not Completed]', '[[b;#44D544;]Completed]'];  // To print the task status\r\n\r\nvar pwdv = [\"lterm\"]  // To print pwd \r\nvar s = [];   //Array for directories\r\nvar f = [];   //Array for files\r\nvar count = 6;    //Required to continue making ~sub directories\r\nvar o = { \"lterm\": \"0\", \"Documents\": \"1\", \"Downloads\": \"2\", \"Music\": \"3\", \"Pictures\": \"4\", \"Videos\":\"5\" };  //Object to assign array of sub folders to a folder\r\nvar of = { \"hello.txt\": \"Hey there newbie!\\nHaving fun? I hope so.\" };  //Object to assign text to a file\r\nf[0] = [\"hello.txt\"];\r\ns[0] = [\"Documents\", \"Downloads\", \"Music\", \"Pictures\", \"Videos\"];   //Array listing sub directories\r\ns[1] = []; f[1] = [];\r\ns[2] = []; f[2] = [];\r\ns[3] = []; f[3] = [];\r\ns[4] = []; f[4] = [];\r\ns[5] = []; f[5] = [];\r\nlet basic = context => {\r\n    return {\r\n     \r\n        help: () => {\r\n            context.echo(\"Hello\")\r\n            context.echo('\\nList of commands available:');\r\n            context.echo('===========================\\n');\r\n            context.echo('> [[b;#44D544;]about]');\r\n            context.echo('> [[b;#44D544;]contribute]');\r\n            context.echo('> echo ----------- ' + task[arr[0]]);\r\n            context.echo('> pwd ------------ ' + task[arr[1]]);\r\n            context.echo('> ls ------------- ' + task[arr[2]]);\r\n            context.echo('> cd ------------- ' + task[arr[3]]);\r\n            context.echo('> cd .. ---------- ' + task[arr[4]]);\r\n            context.echo('> cd ~ ----------- ' + task[arr[5]]);\r\n            context.echo('> cat ------------ ' + task[arr[6]]);\r\n            context.echo('> touch ---------- ' + task[arr[7]]);\r\n            context.echo('> cp ------------- ' + task[arr[8]]);\r\n            context.echo('> rm ------------- ' + task[arr[9]]);\r\n            context.echo('> mkdir ---------- ' + task[arr[10]]);\r\n            context.echo('> clear ---------- ' + task[arr[11]]);\r\n            context.echo('> uname ---------- ' + task[arr[12]]);\r\n            context.echo('> date  ---------- ' + task[arr[13]]);\r\n            context.echo('> ifconfig ------- ' + task[arr[14]]);\r\n            context.echo('> tty ------------ ' + task[arr[15]]);\r\n            context.echo('> history -------- ' + task[arr[16]]);\r\n            context.echo('\\n');\r\n        },\r\n        echo: (text)=>{\r\n            arr[0] = 1;\r\n            context.echo(text + '\\n');\r\n            context.echo('> The [[b;#ff3300;]echo] command prints back your arguments.');\r\n            context.echo('> Type [[b;#ff3300;]help] and check your first task is completed.');\r\n            context.echo('> Now type [[b;#ff3300;]pwd] to continue.');\r\n        },\r\n        mkdir: (arg1)=>{\r\n            arr[10] = 1;\r\n            context.echo('> The [[b;#ff3300;]mkdir] command (Make Directory) creates a directory if it doesn’t already exist.');\r\n            context.echo('> Type [[b;#ff3300;]ls] to see the new directory created.');\r\n            let x = o[pwdv[pwdv.length - 1]];\r\n            o[arg1] = count;\r\n            s[x].push(arg1);\r\n            s[count] = [];\r\n            f[count] = [];\r\n            x = 0;\r\n            count++;\r\n        },\r\n        ls: function() {  \r\n            arr[2] = 1; \r\n            let x = o[pwdv[pwdv.length - 1]];\r\n            let y = \"[[b;#44D544;]\" + s[x] + \"],\" + f[x];\r\n            var z = y.replace(/,/g, '        ').split();\r\n            this.echo(z);\r\n            x = 0;\r\n            this.echo('> The [[b;#ff3300;]ls] command will list directories and files in the current directory by default,\\n' +\r\n            'however you can specify which path you want to list the directories of.');\r\n            this.echo('> Now type [[b;#ff3300;]cd Documents] to enter a sub directory.');\r\n        },\r\n    }\r\n}\r\n\r\nexport { basic }","import Files from '../lib/fs'\r\nlet file = new Files()\r\nlet fs =  context =>{\r\n\r\n    return {\r\n        ls: () => {\r\n            context.echo(file.getPath())\r\n        },\r\n        cd: (arg) => {\r\n            context.echo(file.changeDir(arg))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport {fs}","/**\r\n * Here we will create a dummy file system \r\n */\r\nimport _ from 'lodash'\r\nclass FileSystem{\r\n    constructor(){\r\n        this.path = '/'\r\n        this.fs = [\r\n            {\r\n                level: 0,\r\n                root: '/',\r\n                contents: ['Documents', 'Downloads']\r\n            }\r\n        ]\r\n        this.level = 0\r\n    }\r\n\r\n    getPath(){\r\n        let data =  _.find(this.fs, {level: this.level})\r\n        return data.contents\r\n    }\r\n\r\n    changeDir(dir){\r\n        let dr = _.find(this.fs,{level: this.level})\r\n        if(!_.includes(dr.contents, dir) ){\r\n            return \"directoy not present\"\r\n        }\r\n        let d = {\r\n            level: this.level+1,\r\n            root: dir,\r\n            contents: []\r\n        }\r\n        this.level++\r\n\r\n        this.fs.push(d)\r\n        return d.contents\r\n    }\r\n\r\n}\r\n\r\nexport default FileSystem","import {basic} from './basic'\r\nimport {fs} from './files'\r\n\r\nconst commands = context => {\r\n    let b = basic(context)\r\n    let f = fs(context)\r\n    return {\r\n        ...b,\r\n        ...f\r\n    }\r\n}\r\n\r\nexport default commands","import React from 'react'\r\nimport $ from 'jquery'\r\n\r\nimport 'jquery.terminal'\r\nimport 'jquery.terminal/css/jquery.terminal.css'\r\nimport commands from '../commands'\r\nconst intro={\r\n        \r\n    // DANGER: high\r\n    // Don't mess with this part or else all HELL will fall loose.\r\n\r\n    prompt:\"[[b;#44D544;]imabp@localhost:~$] \",\r\n    greetings: \"All rights reserved to the owner © [[b;#FFFFFF;]imabp]\\n\\n\" +\r\n                \"This is part of project under [[b;#FFFF00;]Ninja Developers ] \"+\"\\n We [[b;#FF0000;]❤ ]  Open Source \\n\"+\r\n               \"If you want to contribute, you can at github @imabp. \\n Type  [[b;#FFFFFF;]help] to get started \\n\" +\r\n               \"> The shell is basically a program that takes your commands from the keyboard and sends them to the operating system to perform.\\n\" +\r\n               \"> The [[b;#44D544;]Terminal] is a program that launches a shell for you.\\n\" +\r\n               \"> Type [[b;#ff3300;]help] to see the list of [[b;#44D544;]commands/tasks].\\n\\n\" +\r\n               '> Start with [[b;#ff3300;]echo \"any string\"].\\n',\r\n    onBlur: function() {\r\n        // prevent loosing focus\r\n        return false;\r\n    }       \r\n}\r\nexport default class Terminal extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.$el = $(this.el)\r\n        this.$el.terminal(commands(this.$el),intro)\r\n    }\r\n\r\n\r\n    render(){\r\n        return <div  style= {{display:'block'},{height: '100%'},{position:'absolute'},{width:'100%'}} ref={el => this.el = el} /> \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Terminal from './components/terminal'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Terminal />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/style.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}