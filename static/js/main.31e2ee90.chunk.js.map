{"version":3,"sources":["commands/files.js","lib/fs.js","commands/index.js","commands/basic.js","components/terminal.jsx","App.js","index.js"],"names":["file","this","path","fs","level","root","contents","_","find","dir","dr","includes","d","push","commands","context","b","help","echo","basic","f","ls","getPath","cd","arg","changeDir","intro","prompt","greetings","onBlur","Terminal","$el","$","el","terminal","style","width","ref","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSACIA,EAAO,I,WCIP,aAAc,oBACVC,KAAKC,KAAO,IACZD,KAAKE,GAAK,CACN,CACIC,MAAO,EACPC,KAAM,IACNC,SAAU,CAAC,YAAa,eAGhCL,KAAKG,MAAQ,E,sDAKb,OADYG,IAAEC,KAAKP,KAAKE,GAAI,CAACC,MAAOH,KAAKG,QAC7BE,W,gCAGNG,GACN,IAAIC,EAAKH,IAAEC,KAAKP,KAAKE,GAAG,CAACC,MAAOH,KAAKG,QACrC,IAAIG,IAAEI,SAASD,EAAGJ,SAAUG,GACxB,MAAO,uBAEX,IAAIG,EAAI,CACJR,MAAOH,KAAKG,MAAM,EAClBC,KAAMI,EACNH,SAAU,IAKd,OAHAL,KAAKG,QAELH,KAAKE,GAAGU,KAAKD,GACNA,EAAEN,a,MCvBFQ,EATE,SAAAC,GACb,IAAIC,ECJI,SAAAD,GACR,MAAO,CACHE,KAAM,WACFF,EAAQG,KAAK,WDCbC,CAAMJ,GACVK,EFHE,SAAAL,GAEN,MAAO,CACHM,GAAI,WACAN,EAAQG,KAAKlB,EAAKsB,YAEtBC,GAAI,SAACC,GACDT,EAAQG,KAAKlB,EAAKyB,UAAUD,MEJ5BrB,CAAGY,GACX,OAAO,2BACAC,GACAI,IEFLM,EAAM,CAKRC,OAAO,oCACPC,UAAW,olBAOXC,OAAQ,WAEJ,OAAO,IAGMC,E,kLAGb7B,KAAK8B,IAAMC,IAAE/B,KAAKgC,IAClBhC,KAAK8B,IAAIG,SAASpB,EAASb,KAAK8B,KAAKL,K,+BAIhC,IAAD,OACJ,OAAO,yBAAMS,MAAiE,CAACC,MAAM,QAASC,IAAK,SAAAJ,GAAE,OAAI,EAAKA,GAAKA,S,GATrFK,IAAMC,WCb7BC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,Q,MCDNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.31e2ee90.chunk.js","sourcesContent":["import Files from '../lib/fs'\r\nlet file = new Files()\r\nlet fs =  context =>{\r\n\r\n    return {\r\n        ls: () => {\r\n            context.echo(file.getPath())\r\n        },\r\n        cd: (arg) => {\r\n            context.echo(file.changeDir(arg))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport {fs}","/**\r\n * Here we will create a dummy file system \r\n */\r\nimport _ from 'lodash'\r\nclass FileSystem{\r\n    constructor(){\r\n        this.path = '/'\r\n        this.fs = [\r\n            {\r\n                level: 0,\r\n                root: '/',\r\n                contents: ['Documents', 'Downloads']\r\n            }\r\n        ]\r\n        this.level = 0\r\n    }\r\n\r\n    getPath(){\r\n        let data =  _.find(this.fs, {level: this.level})\r\n        return data.contents\r\n    }\r\n\r\n    changeDir(dir){\r\n        let dr = _.find(this.fs,{level: this.level})\r\n        if(!_.includes(dr.contents, dir) ){\r\n            return \"directoy not present\"\r\n        }\r\n        let d = {\r\n            level: this.level+1,\r\n            root: dir,\r\n            contents: []\r\n        }\r\n        this.level++\r\n\r\n        this.fs.push(d)\r\n        return d.contents\r\n    }\r\n\r\n}\r\n\r\nexport default FileSystem","import {basic} from './basic'\r\nimport {fs} from './files'\r\n\r\nconst commands = context => {\r\n    let b = basic(context)\r\n    let f = fs(context)\r\n    return {\r\n        ...b,\r\n        ...f\r\n    }\r\n}\r\n\r\nexport default commands","let basic = context => {\r\n    return {\r\n        help: () => {\r\n            context.echo(\"Hello\")\r\n        }\r\n    }\r\n}\r\n\r\nexport { basic }","import React from 'react'\r\nimport $ from 'jquery'\r\n\r\nimport 'jquery.terminal'\r\nimport 'jquery.terminal/css/jquery.terminal.css'\r\nimport commands from '../commands'\r\nconst intro={\r\n        \r\n    // DANGER: high\r\n    // Don't mess with this part or else all HELL will fall loose.\r\n\r\n    prompt:\"[[b;#44D544;]imabp@localhost:~$] \",\r\n    greetings: \"All rights reserved to the owner © [[b;#FFFFFF;]imabp]\\n\\n\" +\r\n                \"This is part of project under [[b;#FFFF00;]Ninja Developers ] \"+\"\\n We [[b;#FF0000;]❤ ]  Open Source \\n\"+\r\n               \"If you want to contribute, you can at github @imabp. \\n Type  [[b;#FFFFFF;]help] to get started \\n\" +\r\n               \"> The shell is basically a program that takes your commands from the keyboard and sends them to the operating system to perform.\\n\" +\r\n               \"> The [[b;#44D544;]Terminal] is a program that launches a shell for you.\\n\" +\r\n               \"> Type [[b;#ff3300;]help] to see the list of [[b;#44D544;]commands/tasks].\\n\\n\" +\r\n               '> Start with [[b;#ff3300;]echo \"any string\"].\\n',\r\n    onBlur: function() {\r\n        // prevent loosing focus\r\n        return false;\r\n    }       \r\n}\r\nexport default class Terminal extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.$el = $(this.el)\r\n        this.$el.terminal(commands(this.$el),intro)\r\n    }\r\n\r\n\r\n    render(){\r\n        return <div  style= {{display:'block'},{height: '100%'},{position:'absolute'},{width:'100%'}} ref={el => this.el = el} /> \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Terminal from './components/terminal'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Terminal />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/style.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}